Document (
 Prefix(rdf  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
 Prefix(rdfs <http://www.w3.org/2000/01/rdf-schema#>)
 Prefix(owl  <http://www.w3.org/2002/07/owl#>)
 Prefix(xsd  <http://www.w3.org/2001/XMLSchema#>)
 Prefix(rif  <http://www.w3.org/2007/rif#>)
 Prefix(func <http://www.w3.org/2007/rif-builtin-function#>)
 Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>)
 Prefix(dc   <http://purl.org/dc/terms/>)
 Group (

 (* <#eq-diff2> *)
 Forall ?x ?y ?z1 ?z2 ?iz1 ?iz2 (
   rif:error() :- And (
       ?x[rdf:type -> owl:AllDifferent]
       ?x[owl:members -> ?y]
       External(pred:list-contains(?y ?z1))   ?iz1 = External(func:index-of(?y ?z1))
       External(pred:list-contains(?y ?z2))   ?iz2 = External(func:index-of(?y ?z2))
       External( pred:numeric-not-equal ( ?iz1 ?iz2 ) ) 
       ?z1[owl:sameAs->?z2] ) )

 (* <#eq-diff3> *)
 Forall?x ?y ?z1 ?z2 ?iz1 ?iz2 (
   rif:error() :- And (
       ?x[rdf:type -> owl:AllDifferent]
       ?x[owl:distinctMembers -> ?y]
       External(pred:list-contains(?y ?z1))   ?iz1 = External(func:index-of(?y ?z1))
       External(pred:list-contains(?y ?z2))   ?iz2 = External(func:index-of(?y ?z2))
       External( pred:numeric-not-equal ( ?iz1 ?iz2 ) ) 
       ?z1[owl:sameAs->?z2] ) )

 (* <#prp-adp> *)
 Forall ?x ?y ?o ?v ?l ?ix ?iy ?r (
   rif:error() :- And (
       ?r[rdf:type -> owl:AllDisjointProperties]
       ?r[owl:members -> ?l]
       External(pred:list-contains(?l ?x))   ?ix = External(func:index-of(?l ?x))
       External(pred:list-contains(?l ?y))   ?iy = External(func:index-of(?l ?y))
       External( pred:numeric-not-equal ( ?ix ?iy ) ) 
       ?o[?x->?v ?y->?v]) )

 (* <#cax-adc> *)
 Forall ?x ?y ?o ?l ?ix ?iy ?r (
   rif:error() :- And (
       ?r[rdf:type -> owl:AllDisjointClasses]
       ?r[owl:members -> ?l]
       External(pred:list-contains(?l ?x))   ?ix = External(func:index-of(?l ?x))
       External(pred:list-contains(?l ?y))   ?iy = External(func:index-of(?l ?y))
       External( pred:numeric-not-equal ( ?ix ?iy ) ) 
       ?o[rdf:type->?x rdf:type->?y]) )
 
 (* <#prp-spo2> *)
 Forall ?p ?last ?pc ?start (
   ?start[?p->?last] :- And (
       ?p[owl:propertyChainAxiom->?pc]
       _checkChain(?start ?pc ?last) ))

 Forall ?start ?pc ?last ?p ?tl (
   _checkChain(?start ?pc  ?last) :- And (
       ?pc[rdf:first->?p rdf:rest->?tl]
       ?start[?p->?next]
       _checkChain(?next ?tl ?last) ))

 Forall ?start ?pc ?last ?p (
   _checkChain(?start ?pc  ?last) :- And (
       ?pc[rdf:first->?p rdf:rest->rdf:nil]
       ?start[?p->?last] ))
 
   Forall ?x ?y ?c ?u ?c (
   ?x[owl:sameAs->?y] :- And (
     ?c[owl:hasKey->?u]  ?x[rdf:type->?c]  ?y[rdf:type->?c]
     _sameKey(?u ?x ?y) ))

 Forall ?u ?x ?y (
   _sameKey(?u ?x ?y) :- And (
     ?u[rdf:first->?key rdf:rest->?tl]
     ?x[?key->?v] ?y[?key->?v]
     _sameKey(?tl ?x ?y) ))

 Forall ?u ?x ?y (
   _sameKey(?u ?x ?y) :- And (
     ?u[rdf:first->?key rdf:rest->rdf:nil]
     ?x[?key->?v] ?y[?key->?v] ))
 
 (* <#cls-int1> *)
 Forall ?y ?c ?l (
   ?y[rdf:type->?c] :- And (
     ?c[owl:intersectionOf->?l]
     _allTypes(?l ?y) ))

 Forall ?l ?y ?ty ?tl (
   _allTypes(?l ?y) :- And (
     ?l[rdf:first->?ty rdf:rest->?tl]
     ?y[rdf:type->?ty]
     _allTypes(?tl ?y) ))

 Forall ?l ?y ?ty (
   _allTypes(?l ?y) :- And (
     ?l[rdf:first->?ty rdf:rest->rdf:nil]
     ?y[rdf:type->?ty] ))
 
 (* <#prp-key> *)
 Forall ?x ?y ?c ?u (
   ?x[owl:sameAs->?y] :- And (
     ?c[owl:hasKey->?u]  ?x[rdf:type->?c]  ?y[rdf:type->?c]
     _sameKey(?u ?x ?y) ))

 Forall ?u ?x ?y (
   _sameKey(?u ?x ?y) :- And (
     ?u[rdf:first->?key rdf:rest->?tl]
     ?x[?key->?v] ?y[?key->?v]
     _sameKey(?tl ?x ?y) ))

 Forall ?u ?x ?y (
   _sameKey(?u ?x ?y) :- And (
     ?u[rdf:first->?key rdf:rest->rdf:nil]
     ?x[?key->?v] ?y[?key->?v] ))
 
 (* <#cls-uni> *)
 Forall ?y ?c ?l ?ci (
   ?y[rdf:type->?c] :- And (
     ?c[owl:unionOf->?l]
     External(pred:list-contains(?l ?ci))
     ?y[rdf:type->?ci] ))

 (* <#cls-oo> *)
 Forall ?yi ?c ?l (
   ?yi[rdf:type->?c] :- And (
     ?c[owl:oneOf->?l]
     External(pred:list-contains(?l ?yi)) ))

 (* <#cls-int2> *)
 Forall ?y ?c ?ci ?l (
   ?y[rdf:type->?ci] :- And (
     ?c[owl:intersectionOf->?l]
     External(pred:list-contains(?l ?ci))
     ?y[rdf:type->?c] ))

 (* <#scm-int> *)
 Forall ?c ?ci ?l (
   ?c[rdfs:subClassOf->?ci] :- And (
     ?c[owl:intersectionOf->?l]
     External(pred:list-contains(?l ?ci)) ))

 (* <#scm-uni> *)
 Forall ?c ?ci ?l (
   ?ci[rdfs:subClassOf->?c] :- And (
     ?c[owl:unionOf->?l]
     External(pred:list-contains(?l ?ci)) ))
 